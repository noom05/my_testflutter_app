import 'package:flutter/material.dart';
import 'package:my_testflutter_app/pages/send.dart';
import 'package:my_testflutter_app/pages/trackparcel.dart'; // ‚úÖ ‡∏ô‡∏≥‡πÄ‡∏Ç‡πâ‡∏≤ SelectRider

class ParcelDashboardScreen extends StatefulWidget {
  const ParcelDashboardScreen({super.key});

  @override
  _ParcelDashboardScreenState createState() => _ParcelDashboardScreenState();
}

class _ParcelDashboardScreenState extends State<ParcelDashboardScreen> {
  int selectedTab = 0; // 0 = ‡∏™‡πà‡∏á‡πÅ‡∏•‡πâ‡∏ß, 1 = ‡πÑ‡∏î‡πâ‡∏£‡∏±‡∏ö

  void _onItemTapped(int index) {
    if (index == 2) {
      // ‚úÖ ‡∏Å‡∏î "‡∏´‡∏ô‡πâ‡∏≤‡∏ö‡πâ‡∏≤‡∏ô" ‚Üí ‡πÑ‡∏õ‡∏´‡∏ô‡πâ‡∏≤ SelectRider
      Navigator.pushReplacement(
        context,
        MaterialPageRoute(builder: (context) => SendParcelScreen()),
      );
    } else if (index == 1) {
      // ‚úÖ ‡∏≠‡∏¢‡∏π‡πà‡∏´‡∏ô‡πâ‡∏≤ "‡∏û‡∏±‡∏™‡∏î‡∏∏‡∏Ç‡∏≠‡∏á‡∏â‡∏±‡∏ô" ‡πÅ‡∏•‡πâ‡∏ß ‡πÑ‡∏°‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏ó‡∏≥‡∏≠‡∏∞‡πÑ‡∏£
    } else if (index == 3) {
      // ‚úÖ ‡∏Å‡∏î "‡∏ï‡∏¥‡∏î‡∏ï‡∏≤‡∏°" ‚Üí ‡πÑ‡∏õ‡∏´‡∏ô‡πâ‡∏≤ TrackParcel
      Navigator.pushReplacement(
        context,
        MaterialPageRoute(builder: (context) => TrackParcelScreen()),
      );
    }
  }

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      appBar: AppBar(
        title: Text('‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏û‡∏±‡∏™‡∏î‡∏∏'),
        backgroundColor: Colors.blueAccent,
      ),
      body: Column(
        children: [
          // üîÅ Tabs ‡∏î‡πâ‡∏≤‡∏ô‡∏ö‡∏ô
          Row(
            children: [
              Expanded(
                child: GestureDetector(
                  onTap: () => setState(() => selectedTab = 0),
                  child: Container(
                    padding: EdgeInsets.all(12),
                    color: selectedTab == 0
                        ? Colors.blue[100]
                        : Colors.grey[200],
                    child: Center(child: Text('‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏û‡∏±‡∏™‡∏î‡∏∏‡∏ó‡∏µ‡πà‡∏à‡∏±‡∏î‡∏™‡πà‡∏á')),
                  ),
                ),
              ),
              Expanded(
                child: GestureDetector(
                  onTap: () => setState(() => selectedTab = 1),
                  child: Container(
                    padding: EdgeInsets.all(12),
                    color: selectedTab == 1
                        ? Colors.blue[100]
                        : Colors.grey[200],
                    child: Center(child: Text('‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏û‡∏±‡∏™‡∏î‡∏∏‡∏ó‡∏µ‡πà‡πÑ‡∏î‡πâ‡∏£‡∏±‡∏ö')),
                  ),
                ),
              ),
            ],
          ),

          // üîç ‡∏ä‡πà‡∏≠‡∏á‡∏Ñ‡πâ‡∏ô‡∏´‡∏≤‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞
          Padding(
            padding: const EdgeInsets.all(12.0),
            child: TextField(
              decoration: InputDecoration(
                labelText: '‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞‡∏û‡∏±‡∏™‡∏î‡∏∏',
                prefixIcon: Icon(Icons.search),
                border: OutlineInputBorder(),
              ),
            ),
          ),

          // üì¶ ‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏û‡∏±‡∏™‡∏î‡∏∏
          Expanded(
            child: ListView(
              children: [
                ListTile(
                  leading: Icon(Icons.local_shipping),
                  title: Text('Pending Delivery'),
                  subtitle: Text('‡∏Ñ‡∏∏‡∏ì‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏™‡πà‡∏á‡∏ó‡∏µ‡πà‡∏£‡∏≠‡∏î‡∏≥‡πÄ‡∏ô‡∏¥‡∏ô‡∏Å‡∏≤‡∏£'),
                ),
                Divider(),
                ListTile(
                  leading: Icon(Icons.history),
                  title: Text('Recent Delivery'),
                  subtitle: Text(
                    '‡∏Ñ‡∏∏‡∏ì‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏õ‡∏£‡∏∞‡∏ß‡∏±‡∏ï‡∏¥‡∏Å‡∏≤‡∏£‡∏™‡πà‡∏á ‡∏≠‡∏¢‡∏≤‡∏Å‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏™‡πà‡∏á‡∏ß‡∏±‡∏ô‡∏ô‡∏µ‡πâ‡πÑ‡∏´‡∏°?',
                  ),
                ),
              ],
            ),
          ),
        ],
      ),

      // üß≠ ‡πÅ‡∏ñ‡∏ö‡πÄ‡∏°‡∏ô‡∏π‡∏î‡πâ‡∏≤‡∏ô‡∏•‡πà‡∏≤‡∏á
      bottomNavigationBar: BottomNavigationBar(
        currentIndex: 1, // ‚úÖ ‡πÅ‡∏™‡∏î‡∏á‡∏ß‡πà‡∏≤‡∏≠‡∏¢‡∏π‡πà‡∏ó‡∏µ‡πà "‡∏û‡∏±‡∏™‡∏î‡∏∏‡∏Ç‡∏≠‡∏á‡∏â‡∏±‡∏ô"
        selectedItemColor: Colors.blueAccent,
        unselectedItemColor: Colors.grey,
        onTap: _onItemTapped,
        items: [
          BottomNavigationBarItem(icon: Icon(Icons.home), label: '‡∏´‡∏ô‡πâ‡∏≤‡∏ö‡πâ‡∏≤‡∏ô'),
          BottomNavigationBarItem(
            icon: Icon(Icons.inbox),
            label: '‡∏û‡∏±‡∏™‡∏î‡∏∏‡∏Ç‡∏≠‡∏á‡∏â‡∏±‡∏ô',
          ),
          BottomNavigationBarItem(icon: Icon(Icons.send), label: '‡∏™‡πà‡∏á‡∏û‡∏±‡∏™‡∏î‡∏∏'),
          BottomNavigationBarItem(
            icon: Icon(Icons.track_changes),
            label: '‡∏ï‡∏¥‡∏î‡∏ï‡∏≤‡∏°',
          ),
          BottomNavigationBarItem(icon: Icon(Icons.person), label: '‡πÑ‡∏õ‡πÇ‡∏õ‡∏£‡πÑ‡∏ü‡∏•‡πå'),
        ],
      ),
    );
  }
}
