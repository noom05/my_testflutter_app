import 'package:flutter/material.dart';
import 'package:my_testflutter_app/pages/dashboard.dart';
// import 'package:google_maps_flutter/google_maps_flutter.dart'; // ‚úÖ ‡∏£‡∏≠‡πÄ‡∏õ‡∏¥‡∏î‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô

class TrackParcelScreen extends StatefulWidget {
  const TrackParcelScreen({super.key});

  @override
  _TrackParcelScreenState createState() => _TrackParcelScreenState();
}

class _TrackParcelScreenState extends State<TrackParcelScreen> {
  // GoogleMapController? mapController; // ‚úÖ ‡∏£‡∏≠‡πÄ‡∏õ‡∏¥‡∏î‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô
  // final LatLng _center = const LatLng(13.7563, 100.5018); // Bangkok

  final Map<String, String> driverInfo = {
    'name': '‡∏Ñ‡∏∏‡∏ì‡∏™‡∏°‡∏ä‡∏≤‡∏¢',
    'carModel': 'Toyota Hilux Revo',
    'licensePlate': '‡∏Å‡∏Ç 1234 ‡∏Å‡∏£‡∏∏‡∏á‡πÄ‡∏ó‡∏û',
  };

  void _onItemTapped(int index) {
    if (index == 1) {
      Navigator.pushReplacement(
        context,
        MaterialPageRoute(builder: (context) => ParcelDashboardScreen()),
      );
    } else if (index == 2) {
      // ‡∏≠‡∏¢‡∏π‡πà‡∏´‡∏ô‡πâ‡∏≤ "‡∏™‡πà‡∏á‡∏û‡∏±‡∏™‡∏î‡∏∏" ‡πÅ‡∏•‡πâ‡∏ß ‡πÑ‡∏°‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏ó‡∏≥‡∏≠‡∏∞‡πÑ‡∏£
    } else {
      ScaffoldMessenger.of(context).showSnackBar(
        SnackBar(content: Text('‡πÄ‡∏°‡∏ô‡∏π‡∏ô‡∏µ‡πâ‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏´‡∏ô‡πâ‡∏≤‡∏£‡∏≠‡∏á‡∏£‡∏±‡∏ö')),
      );
    }
  }

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      appBar: AppBar(title: Text('‡∏ï‡∏¥‡∏î‡∏ï‡∏≤‡∏°‡∏û‡∏±‡∏™‡∏î‡∏∏')),
      body: Stack(
        children: [
          // ‚úÖ ‡∏û‡∏∑‡πâ‡∏ô‡∏ó‡∏µ‡πà‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡πÅ‡∏ú‡∏ô‡∏ó‡∏µ‡πà (‡∏£‡∏≠‡πÄ‡∏õ‡∏¥‡∏î‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô)
          /*
          GoogleMap(
            onMapCreated: _onMapCreated,
            initialCameraPosition: CameraPosition(
              target: _center,
              zoom: 14.0,
            ),
            markers: {
              Marker(
                markerId: MarkerId('driver'),
                position: _center,
                infoWindow: InfoWindow(
                  title: driverInfo['name'],
                  snippet: driverInfo['licensePlate'],
                ),
              ),
            },
          ),
          */

          // üì¶ ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏Ñ‡∏ô‡∏Ç‡∏±‡∏ö‡∏î‡πâ‡∏≤‡∏ô‡∏•‡πà‡∏≤‡∏á
          Positioned(
            bottom: 0,
            left: 0,
            right: 0,
            child: Container(
              color: Colors.white.withOpacity(0.9),
              height: 160,
              child: Column(
                children: [
                  ListTile(
                    leading: Icon(Icons.local_shipping, size: 40, color: Colors.blueAccent),
                    title: Text(driverInfo['name'] ?? ''),
                    subtitle: Column(
                      crossAxisAlignment: CrossAxisAlignment.start,
                      children: [
                        SizedBox(height: 4),
                        Text('‡∏£‡∏∏‡πà‡∏ô‡∏£‡∏ñ: ${driverInfo['carModel']}'),
                        Text('‡∏ó‡∏∞‡πÄ‡∏ö‡∏µ‡∏¢‡∏ô: ${driverInfo['licensePlate']}'),
                      ],
                    ),
                  ),
                ],
              ),
            ),
          ),
        ],
      ),

      // üß≠ ‡πÅ‡∏ñ‡∏ö‡πÄ‡∏°‡∏ô‡∏π‡∏î‡πâ‡∏≤‡∏ô‡∏•‡πà‡∏≤‡∏á
      bottomNavigationBar: BottomNavigationBar(
        currentIndex: 2, // ‚úÖ ‡πÅ‡∏™‡∏î‡∏á‡∏ß‡πà‡∏≤‡∏≠‡∏¢‡∏π‡πà‡∏ó‡∏µ‡πà "‡∏™‡πà‡∏á‡∏û‡∏±‡∏™‡∏î‡∏∏"
        selectedItemColor: Colors.blueAccent,
        unselectedItemColor: Colors.grey,
        onTap: _onItemTapped,
        items: [
          BottomNavigationBarItem(icon: Icon(Icons.home), label: '‡∏´‡∏ô‡πâ‡∏≤‡∏ö‡πâ‡∏≤‡∏ô'),
          BottomNavigationBarItem(icon: Icon(Icons.inbox), label: '‡∏û‡∏±‡∏™‡∏î‡∏∏‡∏Ç‡∏≠‡∏á‡∏â‡∏±‡∏ô'),
          BottomNavigationBarItem(icon: Icon(Icons.send), label: '‡∏™‡πà‡∏á‡∏û‡∏±‡∏™‡∏î‡∏∏'),
          BottomNavigationBarItem(icon: Icon(Icons.track_changes), label: '‡∏ï‡∏¥‡∏î‡∏ï‡∏≤‡∏°'),
          BottomNavigationBarItem(icon: Icon(Icons.person), label: '‡πÑ‡∏õ‡πÇ‡∏õ‡∏£‡πÑ‡∏ü‡∏•‡πå'),
        ],
      ),
    );
  }
}
